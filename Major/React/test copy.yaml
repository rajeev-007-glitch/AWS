Parameters:
  RepoUrl:
    Type: String
    Description: "This the React repository URL thats going to be deployed"
    Default: "https://github.com/namanjagtap/Zomato-Clone.git"
  RepoName:
    Type: String
    Description: "This the React repository name thats going to be deployed"
    Default: "Zomato-Clone"
Resources:
  MyNewEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-08c84d37db8aafe00
      InstanceType: t2.micro
      SubnetId: subnet-0b66fe496afb21e9e
      SecurityGroupIds:
        - sg-0be9656f11b2eb854
      KeyName: EC2_Major
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo su
          sudo yum install -y nodejs
          sudo yum install -y nginx
          sudo yum install -y git
          sudo systemctl enable nginx
          systemctl status nginx
          cd /usr/share/nginx/html
          git clone ${RepoUrl}
          cd ${RepoName}
          npm install
          npm run build
          cd /etc/nginx/

          sudo su
          rm -f nginx.conf 

          sudo echo "user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log notice;
          pid /run/nginx.pid;

          # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
          include /usr/share/nginx/modules/*.conf;

          events {
              worker_connections 1024;
          }

          http {
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

              access_log  /var/log/nginx/access.log  main;

              sendfile            on;
              tcp_nopush          on;
              keepalive_timeout   65;
              types_hash_max_size 4096;

              include             /etc/nginx/mime.types;
              default_type        application/octet-stream;
                include /etc/nginx/conf.d/*.conf;

              server {
                  listen       80;
                  listen       [::]:80;
                  server_name  _;
                  root         /usr/share/nginx/html/${RepoName}/build;

                  # Load configuration files for the default server block.
                  include /etc/nginx/default.d/*.conf;

                  error_page 404 /404.html;
                  location = /404.html {
                  }

                  error_page 500 502 503 504 /50x.html;
                  location = /50x.html {
                  }
              }
          }   " >> nginx.conf


          sudo service nginx restart
